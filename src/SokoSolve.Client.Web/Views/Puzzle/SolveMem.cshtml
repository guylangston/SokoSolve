@using SokoSolve.Core.Common
@using SokoSolve.Core.Solver
@using TextRenderZ.Reporting
@using System.Collections.Concurrent
@using System.Runtime.CompilerServices
@using Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments
@model SokoSolve.Client.Web.Logic.ServerSideStateLease<SokoSolve.Client.Web.Controllers.PuzzleController.SolverModel>
@{
    var stats = new List<SolverStatistics>();
    var state = Model.State.State;
    if (state != null)
    {
        stats.Add(state.GlobalStats);
        stats.AddRange(state.Statistics);
    }

    
}

<div class="row">
    <div class="col-4">
        <a asp-action="Home" asp-route-id="@Model.State.Puzzle.Ident">back</a>
    
        <h1>@Model.State.Puzzle.Ident</h1>
        
        @if (state != null)
        {
            <partial name="PuzzleMap" model="@state.Command.Puzzle"/>    
        }
        
        
        <hr/>
        
        
            
         <h4>Tools / Reports</h4>
                <ul>
                    <li><a asp-action="RunningSolverReport" asp-route-id="@Model.State.Puzzle.Ident" asp-route-token="@Model.State.Token" >Report</a></li>
                    <li><a asp-action="Workers" asp-route-id="@Model.State.Puzzle.Ident" asp-route-token="@Model.State.Token" >Workers</a></li>
                    <li><a asp-action="ByDepth" asp-route-id="@Model.State.Puzzle.Ident" asp-route-token="@Model.State.Token" >By Depth</a></li>
                    <li><a asp-action="KnownSolutionReport" asp-route-id="@Model.State.Puzzle.Ident" asp-route-token="@Model.State.Token" >Known Solution Report</a></li>
                </ul>
                
                
        
              
                <h4>Explore Tree</h4>
        <ul>
            @if (Model.State.RootForward != null)
            {
                <li><a asp-action="SolveNode" asp-route-id="@Model.State.Puzzle.Ident" asp-route-token="@Model.State.Token" asp-route-nodeid="">Root Node</a></li>  
            }
            @if (Model.State.RootReverse != null)
            {
                <li><a asp-action="SolveNode" asp-route-id="@Model.State.Puzzle.Ident" asp-route-token="@Model.State.Token" asp-route-nodeid="-1">Root Node (Reverse)</a></li>    
            }
        </ul>



    </div>
    
    <div class="col-8">
        <div class="sss-target" data-method="Refresh" data-internal="1s" data-url="@Url.Action("SolveMemInner", new {id=Model.State.Puzzle.Ident, token=Model.LeaseId, iv="status"})">
            LOADING...
        </div>
    
    
        
    </div>

</div>

<div class="row">
    <div class="col-6">
          
                              
              
    </div>
    <div class="col-6">

    </div>
</div>

@section Scripts
{
    <script>
    $(".sss-target").each(function (idx, ee) {
        
        var eee = $(ee);
        var method = eee.attr("data-method");
        var url = eee.attr("data-url");
        
        if (method === "Refresh"){
            
            window.setInterval(
                function () {
                    
                    $.ajax(url).done(function (data){
                                       ee.innerHTML = data;  
                                    }).fail(function (a,b,c) {
                                        ee.innerHTML = a + b + c;
                                        });
                    }, 1000);
            
        }
   
        });
</script>
}


 



